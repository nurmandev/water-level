<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('partials/head'); %>
    <title>Sensor Data</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <style>
      .progress-bar-vertical {
        width: 100%;
        height: 200px;
        display: flex;
        align-items: flex-end;
      }
    </style>
  </head>
  <body>
    <div class="container mt-5">
      <h1>Sensor Data for <%= user.username %></h1>
      <div class="card-deck">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">Tank</h5>
            <div class="progress progress-bar-vertical">
              <div
                class="progress-bar progress-bar-danger bg-info progress-bar-striped progress-bar-animated"
                role="progressbar"
                aria-valuenow="<%= sensorData ? sensorData.distance : 0 %>"
                aria-valuemin="0"
                aria-valuemax="100"
                id="tankProgress"
                style="height: <%= sensorData ? sensorData.distance : 0 %>%"
              >
                <div class="container">
                  <span class="sr-only" id="tankPercentage"
                    ><%= sensorData ? sensorData.distance : 0 %>%</span
                  >
                </div>
              </div>
            </div>
            <div class="container">
              <p id="distance">
                Tank is filled up for: <%= sensorData ? sensorData.distance : 0
                %>%
              </p>
            </div>
            <div class="card-footer container">
              <small class="text-muted" id="status"
                >Status: Monitoring...</small
              >
            </div>
          </div>
        </div>
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">History</h5>
            <canvas id="historyChart"></canvas>
          </div>
          <div class="card-footer">
            <small class="text-muted">Last updated # mins ago</small>
          </div>
        </div>
      </div>

      <table class="table table-bordered mt-4">
        <thead>
          <tr>
            <th>Weight</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody>
          <% if (sensorData) { %>
          <tr>
            <td><%= sensorData.distance %> kg</td>
            <td>Tank is filled up for <%= sensorData.distance %>%</td>
          </tr>
          <% } else { %>
          <tr>
            <td colspan="2">No sensor data available.</td>
          </tr>
          <% } %>
        </tbody>
      </table>

      <a href="/logout" class="btn btn-primary mt-3">LogOut</a>
      <a href="/dashboard" class="btn btn-secondary mt-3">Back to Dashboard</a>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      // Initialize chart
      const ctx = document.getElementById("historyChart").getContext("2d");
      const historyChart = new Chart(ctx, {
        type: "line",
        data: {
          labels: [], // Add labels for history
          datasets: [
            {
              label: "Water Level History",
              data: [], // Add data for history
              borderColor: "rgba(75, 192, 192, 1)",
              borderWidth: 1,
            },
          ],
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
            },
          },
        },
      });

      // Update chart data dynamically (if required)
      function updateChartData(labels, data) {
        historyChart.data.labels = labels;
        historyChart.data.datasets[0].data = data;
        historyChart.update();
      }

      // Dummy data for demonstration purposes
      const labels = ["Time 1", "Time 2", "Time 3"];
      const data = [10, 20, 30];
      updateChartData(labels, data);
    </script>

    <script>
      $(document).ready(function() {
          console.log("Sensor Data:", <%= JSON.stringify(sensorData) %>);
      });
    </script>
  </body>
</html>
